/// <reference types="node" />
import Server from '../server';
import Req from '../server/req';
import Res from '../server/res';
import type { IncomingMessage, Server as HTTPServer, ServerResponse } from 'node:http';
import type { ErrorHandler, RequestHandler } from '../server/types';
declare class NodeServer extends Server {
    server: HTTPServer<typeof IncomingMessage, typeof ServerResponse>;
    constructor();
    close(): this;
    fetch(incoming: IncomingMessage, outgoing: ServerResponse): Promise<void>;
    listen(port: number, callback?: () => void): this;
    listen(port: number, hostname: string, callback?: () => void): this;
    port(): Promise<number>;
}
export default NodeServer;
export { Req, Res };
export type { ErrorHandler, RequestHandler };
