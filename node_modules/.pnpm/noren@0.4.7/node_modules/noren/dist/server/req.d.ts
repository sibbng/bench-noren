import Headers from './headers';
import type { JSONValue } from './types';
declare class Req {
    private _body?;
    private _headers?;
    private _pathname?;
    private _url;
    environment: Record<string, string | undefined>;
    method: string;
    params: Record<string, string | undefined>;
    signal: AbortSignal | null;
    constructor(options: {
        body?: Uint8Array | Uint8Array[];
        environment?: Record<string, string | undefined>;
        headers?: [string, string][] | globalThis.Headers;
        method?: string;
        pathname?: string;
        signal?: AbortSignal | null;
        url: string;
    });
    get body(): Uint8Array;
    get cookies(): Record<string, string | undefined>;
    get credentials(): {
        username: string;
        password: string;
    } | undefined;
    get headers(): Headers;
    get ip(): string | undefined;
    get ips(): string[];
    get path(): string;
    get url(): URL;
    cookie(key: string): string | undefined;
    env(key: string): string | undefined;
    header(key: string): string | undefined;
    param(key: string): string | undefined;
    query(key: string): string | undefined;
    queries(key: string): string[];
    arrayBuffer(): Promise<ArrayBuffer>;
    blob(): Promise<Blob>;
    formData(): Promise<FormData>;
    json(): Promise<JSONValue>;
    text(): Promise<string>;
}
export default Req;
