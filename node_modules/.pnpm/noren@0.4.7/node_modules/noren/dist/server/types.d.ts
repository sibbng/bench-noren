import type Req from './req';
import type Res from './res';
type JSONValue = string | number | boolean | null | JSONValue[] | {
    [K: string]: JSONValue;
};
type PromiseMaybe<T> = Promise<T> | T;
type ErrorHandler = {
    (error: Error, req: Req, res: Res, next: () => Promise<void>): PromiseMaybe<void>;
};
type RequestHandler = {
    (req: Req, res: Res, next: (errorOrDone?: true | unknown) => Promise<void>): PromiseMaybe<void>;
};
export type { JSONValue, PromiseMaybe };
export type { ErrorHandler, RequestHandler };
